plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.bakigoal.soccerstats"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        // should correspond to key/value pairs inside the file
        buildConfigField("String", "API_SPORTS_KEY", apikeyProperties['API_SPORTS_KEY'])
        buildConfigField("String", "API_SPORTS_HOST", apikeyProperties['API_SPORTS_HOST'])

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android Ktx
    implementation "androidx.core:core-ktx:$version_core"

    // Support libraries
    implementation "androidx.appcompat:appcompat:$version_compat"
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"
    implementation "com.google.android.material:material:$version_material"
    implementation "androidx.legacy:legacy-support-v4:$version_legacy_support"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"

    // Kotlin Coroutines for getting off the UI thread
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_kotlin_coroutines"

    // Retrofit for networking
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"

    // Moshi for parsing the JSON format
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_lifecycle"
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"

    // Coil for images (https://github.com/coil-kt/coil)
    implementation("io.coil-kt:coil:$version_coil")
    implementation("io.coil-kt:coil-svg:$version_coil")

    // Room database
    implementation "androidx.room:room-runtime:$version_room"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.0'
    kapt "androidx.room:room-compiler:$version_room"
    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$version_room"

    // WorkManager
    implementation "android.arch.work:work-runtime-ktx:$version_work"

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:$version_recyclerview"

    // Testing
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
}